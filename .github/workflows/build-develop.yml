name: Develop
on:
  push:
    branches:
      - develop
      - githubActionsRefactoring
jobs:
  # ==========================================================================
  # Create Github tag/release and export short SHA of current HEAD
  prepareRelease:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      github_sha_short: ${{ steps.slug.outputs.sha8 }}
    steps:
      - name: Get short SHA
        id: slug
        run: echo "::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)"
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d %H:%M:%S')"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: Build${{ github.run_number }}-${{ steps.slug.outputs.sha8 }}
          release_name: "Continuous build #${{ github.run_number }}"
          body: |
            Build #${{ github.run_number }} from ${{ steps.date.outputs.date }}
            - tbd: Artifact checksums
          draft: false
          prerelease: true

  # ==========================================================================
  # Build all x86 Linux flavours
  buildLinux:
    runs-on: ubuntu-latest
    needs: prepareRelease
    strategy:
      matrix:
        distro: [ Debian/Dockerfile_Buster, Ubuntu/Dockerfile_20_04 ]
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Build docker images
        run: docker build \
          -t local \
          -f Docker/${{ matrix.distro }} \
          --build-arg BUILD_THREADS=2 \
          --build-arg GITHUB_CI_TOKEN=${{ secrets.GITHUB_TOKEN }} \
          --build-arg GIT_COMMIT=${{ needs.prepareRelease.outputs.github_sha_short }} \
          --build-arg ALIAS_RELEASE=Build${{ github.run_number }}-${{ needs.prepareRelease.outputs.github_sha_short }} \
          --build-arg REPLACE_EXISTING_ARCHIVE=--replace \
          .
        env:
          GITHUB_CI_TOKEN: ${{ secrets.GITHUB_TOKEN }}
